# shellcheck disable=SC2034,SC1091,SC1090
# CodeWhisperer pre block. Keep at the top of this file.
[[ -f "${HOME}/Library/Application Support/codewhisperer/shell/zshrc.pre.zsh" ]] && builtin source "${HOME}/Library/Application Support/codewhisperer/shell/zshrc.pre.zsh"

# when profiling, uncomment this line
# _ZSH_PROFILE=1

if [ "$_ZSH_PROFILE" ]; then
  zmodload zsh/zprof
fi

((INTERACTIVE)) || INTERACTIVE=1
((INTELLIJ_ENVIRONMENT_READER)) || INTERACTIVE=0

#ensure path arrays do not contain duplicates
typeset -gU cdpath fpath mailpath path PATH

OLDPATH=$PATH
export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:/usr/local/sbin

source "$HOME/.zshrc-helpers"

prepend_path /home/linuxbrew/.linuxbrew/bin
prepend_path /usr/local/opt/coreutils/libexec/gnubin
prepend_path "$HOME/.toolbox/bin"
append_path  "/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
prepend_manpath /usr/local/opt/coreutils/libexec/gnuman
append_path "$HOME/.cargo/bin"
append_path "$HOME/go/bin"
append_path "$HOME/.dotnet/tools"
append_path "$HOME/.pyenv/bin"
append_path "${KREW_ROOT:-$HOME/.krew}/bin"
append_path /snap/bin
export PATH=$PATH:$OLDPATH

for script in "$HOME"/.local/lib/*.zsh; do
  . "$script"
done

# shellcheck disable=SC2206
fpath=(~/.zsh/completion ~/.local/lib/zsh-completions/src $fpath)
if type brew &>/dev/null; then
    FPATH="$(brew --prefix)/share/zsh/site-functions:$FPATH"
    FPATH="$(brew --prefix)/share/zsh-completions:$FPATH"
fi

# This must be before sheldon/ohmhyzsh, otherwise we get warnings
#eval "$(pyenv init -)"

ZSH_THEME="agnoster" # set by `omz`
HYPHEN_INSENSITIVE="true"
export UPDATE_ZSH_DAYS=5
DISABLE_UPDATE_PROMPT="true"
COMPLETION_WAITING_DOTS="true"
HIST_STAMPS="yyyy-mm-dd"
ZSH_TMUX_AUTOSTART=true

if [[ -s "$HOME/.autojump/etc/profile.d/autojump.sh" ]]; then
  source "$HOME/.autojump/etc/profile.d/autojump.sh"
  AUTOJUMPPLUGIN=autojump
fi

if [[ "$OSTYPE" == "darwin"* ]]; then
  OSXPLUGIN=macos
fi

# now that docker isn't free anymore,
# I can't have it on all my machines :(
if [[ $(command -v docker) ]]; then
  DOCKERPLUGIN=docker
fi

# shellcheck disable=SC2034 disable=SC2206
plugins=(
  ${AUTOJUMPPLUGIN}
  aws
  bgnotify
  command-not-found
  dircycle
  ${DOCKERPLUGIN}
  fzf
  git
  git-extras
  git-prompt
  gitfast
  github
  gpg-agent
  helm
  history
  kubectl
  kubectx
  magic-enter
  ${OSXPLUGIN}
  mise 
  screen
  sudo
  yarn
  zsh-interactive-cd
)

if [ -d "$HOME/.local/share/sheldon/repos/github.com/ohmyzsh/ohmyzsh" ]; then
  export ZSH="$HOME/.local/share/sheldon/repos/github.com/ohmyzsh/ohmyzsh"
elif [ -d "$HOME/.oh-my-zsh" ]; then
  export ZSH="$HOME/.oh-my-zsh"
else
  echo "ZSH dir not found"
  return
fi

if [ -x sheldon ]; then
   eval "$(sheldon source)"
 else
   source "$ZSH/oh-my-zsh.sh"
fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

command -v nvim >/dev/null 2>&1 && export EDITOR='nvim'

if [ "$TILIX_ID" ] || [ "$VTE_VERSION" ]; then
  source /etc/profile.d/vte.sh
fi

if [ "$INTERACTIVE" -gt 0 ]; then
command -v neofetch >/dev/null 2>&1 && neofetch
fi

export JAVA_TOOLS_OPTIONS="-Dlog4j2.formatMsgNoLookups=true"

if [ -x /usr/local/bin/brew ]; then
  eval "$(/usr/local/bin/brew shellenv)"
fi

if [ "$_ZSH_PROFILE" ]; then
  zprof
fi

# CodeWhisperer post block. Keep at the bottom of this file.
[[ -f "${HOME}/Library/Application Support/codewhisperer/shell/zshrc.post.zsh" ]] && builtin source "${HOME}/Library/Application Support/codewhisperer/shell/zshrc.post.zsh"
